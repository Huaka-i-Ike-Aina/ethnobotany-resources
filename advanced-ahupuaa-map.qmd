---

title: "Advanced Ahupuaa Map"
format: html

---

# A note on dependencies

+ Leaflet requires installing external dependencies
  + See https://rspatial.github.io/terra/


```{r, include = FALSE}

packages <- c("rvest", "xml2", "dplyr", "purrr", "stringr",
              "rmarkdown", "knitr", "xml2", "data.table", "httr",
              "leaflet", "geojsonsf", "jsonlite", "sf", "geojsonio")

install_if_missing <- function(pkg) {
  if (!requireNamespace(pkg, quietly = TRUE)) {
    install.packages(pkg)
  }
}

invisible(lapply(packages, install_if_missing))
invisible(lapply(packages, library, character.only = TRUE))

knitr::opts_chunk$set(
  collapse = TRUE,
  comment = "#>"
)

```
	

# Ahupuaa map with multiple layers
```{r leaf-ahupuaa-map-setup}
# Read GeoJSON as sf object
ahupuaa_data <- st_read("data/Ahupuaa.geojson")
raingauge_data <- st_read("data/Rain_Gauges.geojson")
aguse_2015_data <- st_read("data/Agricultural_Land_Use_-_2015_Baseline.geojson") # polygons
aguse_2020_data <- st_read("data/Agricultural_Land_Use_-_2020_Update.geojson")
marine_areas_data <- st_read("data/Marine_Managed_Areas_(DAR).geojson")
annual_rainfall_data <- st_read("data/Annual_Rainfall_(in).geojson")
threatened_endangered_plants_data <- st_read(
  "data/Threatened-Endangered_Plants.geojson"
)

```

```{r leaf-ahupuaa-map-advanced}
# Calculate centroids for labeling
centroids <- st_centroid(ahupuaa_data)

# Create map
map <- leaflet() %>%
  addTiles(group = "OpenStreetMap") %>%
  addProviderTiles("CartoDB.Positron", group = "CartoDB Light") %>%
  addProviderTiles("CartoDB.DarkMatter", group = "CartoDB Dark") %>%
  addProviderTiles("Esri.WorldImagery", group = "Satellite") %>%
  addProviderTiles("Esri.WorldTopoMap", group = "Topographic") %>%
  setView(lng = -157.8583, lat = 20.9078, zoom = 7)


# Function to create adjacency-based coloring
color_adjacent_polygons <- function(polygons_sf, num_colors = 4) {
  # Create adjacency matrix
  adjacency <- st_touches(polygons_sf, sparse = FALSE)

  # Initialize colors
  n_polygons <- nrow(polygons_sf)
  colors <- rep(NA, n_polygons)
  color_palette <- RColorBrewer::brewer.pal(num_colors, "GnBu")

  # Simple greedy coloring algorithm
  for (i in 1:n_polygons) {
    # Get neighbors
    neighbors <- which(adjacency[i, ])

    # Get colors already used by neighbors
    used_colors <- unique(colors[neighbors])
    used_colors <- used_colors[!is.na(used_colors)]

    # Find first available color
    available_colors <- setdiff(1:num_colors, used_colors)

    if (length(available_colors) > 0) {
      colors[i] <- available_colors[1]
    } else {
      # If no color available, use first color (fallback)
      colors[i] <- 1
    }
  }

  # Add colors to the sf object
  polygons_sf$color_id <- colors
  polygons_sf$fill_color <- color_palette[colors]

  return(polygons_sf)
}

# Apply coloring
colored_ahupuaa <- color_adjacent_polygons(ahupuaa_data, num_colors = 5)


# Add ahupuaa polygons
map <- map %>%
  addPolygons(
    data = colored_ahupuaa,
    label = ~ahupuaa,
    group = "Ahupuaa",
    labelOptions = labelOptions(
      noHide = FALSE,
      textOnly = TRUE,
      direction = "center",
      offset = c(0, 0),
      style = list(
        "color" = "darkgreen",
        "font-weight" = "bold",
        "font-size" = "12px"
      )
    ),
    dashArray = c(5, 5),
    fillOpacity = 0,
    color = "black",
    stroke = TRUE,
    weight = 2,
  )
# Add ahupuaa fill polygons
map <- map %>%
  addPolygons(
    data = colored_ahupuaa,
    group = "Ahupuaa Fill",
    fillColor = ~fill_color,
    fillOpacity = 0.5,
    color = ~fill_color,
    stroke = TRUE,
    weight = 2,
  )

# Add markers at centroids
map <- map %>%
  addMarkers(
    data = centroids,
    group = "Ahupuaa Details",
    popup = ~ paste0(
      "<h3>",
      ahupuaa,
      "</h3>",
      "<p><strong>Moku:</strong> ",
      moku,
      "</p>",
      "<p><strong>Mokupuni:</strong> ",
      mokupuni,
      "</p>",
      "<p><strong>Area:</strong> ",
      gisacres,
      " ac</p>"
    ),
    label = ~ahupuaa,
    clusterOptions = markerClusterOptions()
  )
# Add raingauge circle markers
map <- map %>%
  addCircleMarkers(
    data = raingauge_data,
    group = "Raingauges",
    radius = 8,
    fillColor = "blue",
    color = "white",
    weight = 2,
    fillOpacity = 0.8,
    popup = ~ paste0(
      "<h3>",
      name,
      "</h3>",
      "<p><strong>Elevation:</strong> ",
      elevft,
      "</p>",
      "<p>",
      stationsta,
      "</p>"
    )
  )

aguse_crop = c(
  "Aquaculture",
  "Banana",
  "Coffee",
  "Commercial Forestry",
  "Seed Production",
  "Dairy",
  "Diversified",
  "Flowers / Foliage / Landscape",
  "Macadamia Nuts",
  "Papaya",
  "Pasture",
  "Pineapple",
  "Sugar",
  "Tropical Fruits",
  "Taro"
)
aguse_crop_colors = colorFactor(
  palette = "Set3",
  domain = aguse_crop
)

map <- map %>%
  addPolygons(
    data = aguse_2015_data,
    group = "Ag Use 2015",
    fillColor = ~ aguse_crop_colors(cropcatego),
    fillOpacity = 1,
    color = "darkorange",
    weight = 1,
    popup = ~ paste0(
      "<h3>Ag Use 2015</h3>",
      "<p><strong>Type:</strong> ",
      cropcatego,
      "</p>",
      "<p><strong>Area:</strong> ",
      acreage,
      "</p>"
    )
  )
map <- map %>%
  addPolygons(
    data = aguse_2020_data,
    group = "Ag Use 2020",
    fillColor = ~ aguse_crop_colors(crops_2020),
    fillOpacity = 1,
    color = "gold",
    weight = 1,
    popup = ~ paste0(
      "<h3>Ag Use 2020</h3>",
      "<p><strong>Type:</strong> ",
      crops_2020,
      "</p>",
      "<p><strong>Area:</strong> ",
      acreage,
      "</p>"
    )
  )
map <- map %>%
  addPolygons(
    data = marine_areas_data,
    group = "Marine Areas",
    fillColor = "lightgreen",
    fillOpacity = 0.4,
    color = "green",
    weight = 1,
    popup = ~ paste0(
      "<h3>",
      site_label,
      "</h3>",
      "<p><strong>Designation:</strong> ",
      mma_designation,
      "</p>",
      "<p><strong>Permitted:</strong> ",
      permitted,
      "</p>",
      "<p><strong>Prohibited:</strong> ",
      prohibited,
      "</p>"
    )
  )

# Threatened & Endangered plant density
te_density_levels <- c("O", "OL", "L", "M", "H", "VH")
te_density_labels = c(
  "O" = "Little or no T&E species",
  "L" = "Low concentration of T&E species",
  "M" = "Medium concentration of T&E species",
  "H" = "High concentration of T&E species",
  "VH" = "Very high concentration of T&E species",
  "OL" = "O in cane fields, L in gullies and coastal areas"
)
# Convert density to ordered factor
threatened_endangered_plants_data <- threatened_endangered_plants_data %>%
  mutate(
    density_factor = factor(density, levels = te_density_levels, ordered = TRUE)
  )

# Create color palette (light to dark progression)
density_colors <- c(
  "O" = "#ffffcc", # Very light yellow (almost white)
  "OL" = "#c7e9b4", # Light yellow-green
  "L" = "#7fcdbb", # Light blue-green
  "M" = "#41b6c4", # Medium blue
  "H" = "#2c7fb8", # Dark blue
  "VH" = "#253494" # Very dark blue
)

# Create color palette function
density_pal <- colorFactor(
  palette = density_colors,
  domain = te_density_levels,
  ordered = TRUE
)

map <- map %>%
  addPolygons(
    data = threatened_endangered_plants_data,
    group = "Threatened/Endangered Plants",
    fillColor = ~ density_pal(density),
    color = "black",
    weight = 1,
    fillOpacity = 0.8,
    popup = ~ paste0(
      "<p><strong>Density:</strong> ",
      te_density_labels[density],
      "</p>"
    )
  )

# Create color palette for precipitation values
precip_pal <- colorNumeric(
  palette = "RdBu",
  domain = annual_rainfall_data$contour,
  reverse = FALSE # Higher values = darker blue
)

# Add isohyet lines
map <- map %>%
  addPolylines(
    group = "Annual Rainfall (in)",
    color = ~ precip_pal(contour),
    fillColor = ~ precip_pal(contour),
    fillOpacity = 0.7,
    data = annual_rainfall_data,
    label = ~ as.character(contour),
    labelOptions = labelOptions(
      noHide = TRUE,
      textOnly = TRUE,
      direction = "center",
      offset = c(0, 0),
      style = list(
        "color" = "black",
        "font-weight" = "bold",
        "font-size" = "12px",
        "opacity" = 0.5
      )
    ),
    weight = 1.5,
    opacity = 1,
    popup = ~ paste(
      "<b>Isohyet Line</b><br>",
      "Precipitation:",
      contour,
      "in<br>",
      "Line Length:",
      round(st_lengthshape, 1),
      "m"
    )
  )


# Add layer control
map <- map %>%
  addLayersControl(
    baseGroups = c(
      "OpenStreetMap",
      "CartoDB Light",
      "CartoDB Dark",
      "Satellite",
      "Topographic"
    ),
    overlayGroups = c(
      "Ahupuaa Fill",
      "Raingauges",
      "Ahupuaa Details",
      "Annual Rainfall (in)",
      "Ag Use 2015",
      "Ag Use 2020",
      "Marine Areas",
      "Threatened/Endangered Plants"
    ), #, "Marine Areas", "Threatened/Endangered Plants"
    options = layersControlOptions(collapsed = FALSE)
  ) %>%
  hideGroup(c(
    "Raingauges",
    "Ahupuaa Details",
    "Annual Rainfall (in)",
    "Ag Use 2015",
    "Ag Use 2020",
    "Marine Areas",
    "Threatened/Endangered Plants"
  )) #, "Marine Areas", "Threatened/Endangered Plants"
map

```

